<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="org.wuerthner.cwn.testsuite.Spec" tests="2" skipped="0" failures="0" errors="0" timestamp="2021-05-09T13:33:51" hostname="Kaventsmann" time="0.186">
  <properties/>
  <testcase name="init" classname="org.wuerthner.cwn.testsuite.Spec" time="0.001"/>
  <testcase name="init" classname="org.wuerthner.cwn.testsuite.Spec" time="0.001"/>
  <system-out><![CDATA[req: {}
chp: 1. Project Definition: Optional[This library converts music score, given in an abstract data tree-structre (made of arrangements, tracks, voices, events), into a music sheet with a set of coordinates. Based on this output, any simple drawing tool can be used to display a full music score.]
req: {1. Project Definition: Optional[This library converts music score, given in an abstract data tree-structre (made of arrangements, tracks, voices, events), into a music sheet with a set of coordinates. Based on this output, any simple drawing tool can be used to display a full music score.]=[]}
chp: 2. Scope: Optional[The scope of this document is a description of system requirements in combination with the test cases and their traceability.]
req: {1. Project Definition: Optional[This library converts music score, given in an abstract data tree-structre (made of arrangements, tracks, voices, events), into a music sheet with a set of coordinates. Based on this output, any simple drawing tool can be used to display a full music score.]=[], 2. Scope: Optional[The scope of this document is a description of system requirements in combination with the test cases and their traceability.]=[]}
chp: 3. Model: Optional[This chapter describes the data model]
req: {1. Project Definition: Optional[This library converts music score, given in an abstract data tree-structre (made of arrangements, tracks, voices, events), into a music sheet with a set of coordinates. Based on this output, any simple drawing tool can be used to display a full music score.]=[], 2. Scope: Optional[The scope of this document is a description of system requirements in combination with the test cases and their traceability.]=[], 3. Model: Optional[This chapter describes the data model]=[]}
chp: 4. Use Cases: Optional[This chapter describes integration tests and use cases]
req: {1. Project Definition: Optional[This library converts music score, given in an abstract data tree-structre (made of arrangements, tracks, voices, events), into a music sheet with a set of coordinates. Based on this output, any simple drawing tool can be used to display a full music score.]=[], 2. Scope: Optional[The scope of this document is a description of system requirements in combination with the test cases and their traceability.]=[], 3. Model: Optional[This chapter describes the data model]=[RQ-001: The metric element defines the metric structure of a bar.], 4. Use Cases: Optional[This chapter describes integration tests and use cases]=[]}
chp: 1. Project Definition: Optional[This library converts music score, given in an abstract data tree-structre (made of arrangements, tracks, voices, events), into a music sheet with a set of coordinates. Based on this output, any simple drawing tool can be used to display a full music score.]
req: {1. Project Definition: Optional[This library converts music score, given in an abstract data tree-structre (made of arrangements, tracks, voices, events), into a music sheet with a set of coordinates. Based on this output, any simple drawing tool can be used to display a full music score.]=[], 2. Scope: Optional[The scope of this document is a description of system requirements in combination with the test cases and their traceability.]=[], 3. Model: Optional[This chapter describes the data model]=[RQ-001: The metric element defines the metric structure of a bar.], 4. Use Cases: Optional[This chapter describes integration tests and use cases]=[]}
chp: 2. Scope: Optional[The scope of this document is a description of system requirements in combination with the test cases and their traceability.]
req: {1. Project Definition: Optional[This library converts music score, given in an abstract data tree-structre (made of arrangements, tracks, voices, events), into a music sheet with a set of coordinates. Based on this output, any simple drawing tool can be used to display a full music score.]=[], 2. Scope: Optional[The scope of this document is a description of system requirements in combination with the test cases and their traceability.]=[], 3. Model: Optional[This chapter describes the data model]=[RQ-001: The metric element defines the metric structure of a bar.], 4. Use Cases: Optional[This chapter describes integration tests and use cases]=[]}
chp: 3. Model: Optional[This chapter describes the data model]
req: {1. Project Definition: Optional[This library converts music score, given in an abstract data tree-structre (made of arrangements, tracks, voices, events), into a music sheet with a set of coordinates. Based on this output, any simple drawing tool can be used to display a full music score.]=[], 2. Scope: Optional[The scope of this document is a description of system requirements in combination with the test cases and their traceability.]=[], 3. Model: Optional[This chapter describes the data model]=[], 4. Use Cases: Optional[This chapter describes integration tests and use cases]=[]}
chp: 4. Use Cases: Optional[This chapter describes integration tests and use cases]
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
